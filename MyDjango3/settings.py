"""
Django settings for MyDjango3 project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
# 当前项目位置 E:\pyPro\MyDjango3
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '#fn!g0^z1i9w60q3=yd$=33thhqqyk_d^jic%*hajs6o3ao3f$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition
# 请注意 INSTALLED_APPS 设置在文件顶部。它保存在这个django实例中激活的所有django应用程序的名称。应用程序可以在多个项目中使用，您可以打包和分发它们以供其他人在其项目中使用。
# django.contrib.admin --管理网站。您很快就会使用它。
# django.contrib.auth --认证系统。
# django.contrib.contenttypes --内容类型的框架。
# django.contrib.sessions --会话框架。
# django.contrib.messages --消息传递框架。
# django.contrib.staticfiles --管理静态文件的框架。

# 激活模型
# 这一小段模型代码为Django提供了大量信息。有了它，Django能够：
# 创建数据库架构 (CREATETABLE 声明）。
# 创建用于访问的python数据库访问API Question 和 Choice 对象。
# 但首先我们需要告诉我们的项目 polls 已安装应用程序。
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    # 静态文件处理 就是这样 django.contrib.staticfiles 用于：它将静态文件从每个应用程序（以及您指定的任何其他位置）收集到一个可以在生产中轻松提供服务的位置。
    'django.contrib.staticfiles',


    #自己的模块
    # 模块渲染DjangoTemplates
    # 默认设置文件配置 DjangoTemplates 后端APP_DIRS 选项设置为 True
    'polls.apps.PollsConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'MyDjango3.urls'
print(os.path.join(BASE_DIR, 'templates'))
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # [ from django.shortcuts import render ] render时，拼接此 DIRS /templates/..
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'MyDjango3.wsgi.application'


# Database 数据库默认使用sqlite3
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
